<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fc.dao.HouselistMapper">
    <cache/>
    <resultMap id="BaseResultMap" type="com.fc.pojo.Houselist">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <id column="houseid" jdbcType="VARCHAR" property="houseid"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="area" jdbcType="DOUBLE" property="area"/>
        <result column="price" jdbcType="DOUBLE" property="price"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>

    </resultMap>
    <select id="showHouseList" parameterType="houselist" resultMap="BaseResultMap">
        select * from houselist
    </select>
    <update id="updateStatus" parameterType="houselist">
        update houselist set status=#{status} where houseid=#{houseid}
    </update>
    <select id="selectByprimary" parameterType="houselist" resultMap="BaseResultMap">
        select * from houselist where id=#{id}
    </select>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, houseid, address, area, price, status
    </sql>
    <select id="selectByExample" parameterType="com.fc.pojo.HouselistExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from houselist
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="com.fc.pojo.HouselistKey" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from houselist
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="com.fc.pojo.HouselistKey">
        delete from houselist
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.fc.pojo.HouselistExample">
        delete from houselist
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.fc.pojo.Houselist">
        insert into houselist (id, houseid, address,
        area, price, status)
        values (#{id,jdbcType=INTEGER}, #{houseid,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},
        #{area,jdbcType=DOUBLE}, #{price,jdbcType=DOUBLE}, #{status,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.fc.pojo.Houselist">
        insert into houselist
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="houseid != null">
                houseid,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="area != null">
                area,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="houseid != null">
                #{houseid,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="area != null">
                #{area,jdbcType=DOUBLE},
            </if>
            <if test="price != null">
                #{price,jdbcType=DOUBLE},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.fc.pojo.HouselistExample" resultType="java.lang.Long">
        select count(*) from houselist
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update houselist
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.houseid != null">
                houseid = #{record.houseid,jdbcType=VARCHAR},
            </if>
            <if test="record.address != null">
                address = #{record.address,jdbcType=VARCHAR},
            </if>
            <if test="record.area != null">
                area = #{record.area,jdbcType=DOUBLE},
            </if>
            <if test="record.price != null">
                price = #{record.price,jdbcType=DOUBLE},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update houselist
        set id = #{record.id,jdbcType=INTEGER},
        houseid = #{record.houseid,jdbcType=VARCHAR},
        address = #{record.address,jdbcType=VARCHAR},
        area = #{record.area,jdbcType=DOUBLE},
        price = #{record.price,jdbcType=DOUBLE},
        status = #{record.status,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.fc.pojo.Houselist">
        update houselist
        <set>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="area != null">
                area = #{area,jdbcType=DOUBLE},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DOUBLE},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
        and houseid = #{houseid,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.fc.pojo.Houselist">
        update houselist
        set address = #{address,jdbcType=VARCHAR},
        area = #{area,jdbcType=DOUBLE},
        price = #{price,jdbcType=DOUBLE},
        status = #{status,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>