<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fc.dao.ZulistMapper">
    <cache/>
    <resultMap id="BaseResultMap" type="com.fc.pojo.Zulist">
        <id column="zid" jdbcType="INTEGER" property="zid"/>
        <id column="house_id" jdbcType="VARCHAR" property="houseId"/>
        <result column="userlist_id" jdbcType="INTEGER" property="userlistId"/>
        <result column="contract_id" jdbcType="INTEGER" property="contractId"/>
        <association property="userlist" javaType="com.fc.pojo.Userlist">
            <id column="id" jdbcType="INTEGER" property="id"/>
            <id column="idcard" jdbcType="VARCHAR" property="idcard"/>
            <result column="name" jdbcType="VARCHAR" property="name"/>
            <result column="phone" jdbcType="VARCHAR" property="phone"/>
            <result column="user_id" jdbcType="INTEGER" property="userId"/>
        </association>
        <association property="houselist" javaType="com.fc.pojo.Houselist">
            <id column="id" jdbcType="INTEGER" property="id"/>
            <id column="houseid" jdbcType="VARCHAR" property="houseid"/>
            <result column="address" jdbcType="VARCHAR" property="address"/>
            <result column="area" jdbcType="DOUBLE" property="area"/>
            <result column="price" jdbcType="DOUBLE" property="price"/>
            <result column="status" jdbcType="VARCHAR" property="status"/>
        </association>
    </resultMap>
    <select id="showZuList" parameterType="zulist" resultMap="BaseResultMap">
        select z.*,h.*,u.* from zulist z,houselist h,userlist u where z.house_id=h.houseid and z.userlist_id=u.id
    </select>
    <insert id="insertZulist" parameterType="zulist">
        insert into zulist(house_id,userlist_id,contract_id) values (#{houseId},#{userlistId},#{contractId})
    </insert>
    <delete id="deleteZulist" parameterType="java.lang.String">
        delete from zulist where house_id=#{houseId}
    </delete>
    <select id="selectZulist" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select z.*,h.*,u.* from zulist z,houselist h,userlist u where z.house_id=h.houseid and z.userlist_id=u.id and
        z.zid=#{zid}
    </select>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        zid, house_id, userlist_id, contract_id
    </sql>
    <select id="selectByExample" parameterType="com.fc.pojo.ZulistExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from zulist
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="com.fc.pojo.ZulistKey" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from zulist
        where zid = #{zid,jdbcType=INTEGER}
        and house_id = #{houseId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="com.fc.pojo.ZulistKey">
        delete from zulist
        where zid = #{zid,jdbcType=INTEGER}
        and house_id = #{houseId,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="com.fc.pojo.ZulistExample">
        delete from zulist
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.fc.pojo.Zulist">
        insert into zulist (zid, house_id, userlist_id,
        contract_id)
        values (#{zid,jdbcType=INTEGER}, #{houseId,jdbcType=VARCHAR}, #{userlistId,jdbcType=INTEGER},
        #{contractId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.fc.pojo.Zulist">
        insert into zulist
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="zid != null">
                zid,
            </if>
            <if test="houseId != null">
                house_id,
            </if>
            <if test="userlistId != null">
                userlist_id,
            </if>
            <if test="contractId != null">
                contract_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="zid != null">
                #{zid,jdbcType=INTEGER},
            </if>
            <if test="houseId != null">
                #{houseId,jdbcType=VARCHAR},
            </if>
            <if test="userlistId != null">
                #{userlistId,jdbcType=INTEGER},
            </if>
            <if test="contractId != null">
                #{contractId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.fc.pojo.ZulistExample" resultType="java.lang.Long">
        select count(*) from zulist
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update zulist
        <set>
            <if test="record.zid != null">
                zid = #{record.zid,jdbcType=INTEGER},
            </if>
            <if test="record.houseId != null">
                house_id = #{record.houseId,jdbcType=VARCHAR},
            </if>
            <if test="record.userlistId != null">
                userlist_id = #{record.userlistId,jdbcType=INTEGER},
            </if>
            <if test="record.contractId != null">
                contract_id = #{record.contractId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update zulist
        set zid = #{record.zid,jdbcType=INTEGER},
        house_id = #{record.houseId,jdbcType=VARCHAR},
        userlist_id = #{record.userlistId,jdbcType=INTEGER},
        contract_id = #{record.contractId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.fc.pojo.Zulist">
        update zulist
        <set>
            <if test="userlistId != null">
                userlist_id = #{userlistId,jdbcType=INTEGER},
            </if>
            <if test="contractId != null">
                contract_id = #{contractId,jdbcType=INTEGER},
            </if>
        </set>
        where zid = #{zid,jdbcType=INTEGER}
        and house_id = #{houseId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.fc.pojo.Zulist">
        update zulist
        set userlist_id = #{userlistId,jdbcType=INTEGER},
        contract_id = #{contractId,jdbcType=INTEGER}
        where zid = #{zid,jdbcType=INTEGER}
        and house_id = #{houseId,jdbcType=VARCHAR}
    </update>
</mapper>