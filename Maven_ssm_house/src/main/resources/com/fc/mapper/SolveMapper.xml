<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--suppress ALL -->
<mapper namespace="com.fc.dao.SolveMapper">
    <cache/>
    <resultMap id="BaseResultMap" type="com.fc.pojo.Solve">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="house_id" jdbcType="VARCHAR" property="houseId"/>
        <result column="date" jdbcType="DATE" property="date"/>
        <result column="userlist_id" jdbcType="INTEGER" property="userlistId"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <association property="houselist" javaType="com.fc.pojo.Houselist">
            <id column="id" jdbcType="INTEGER" property="id"/>
            <id column="houseid" jdbcType="VARCHAR" property="houseid"/>
            <result column="address" jdbcType="VARCHAR" property="address"/>
            <result column="area" jdbcType="DOUBLE" property="area"/>
            <result column="price" jdbcType="DOUBLE" property="price"/>
            <result column="status" jdbcType="VARCHAR" property="status"/>
        </association>
        <association property="userlist" javaType="com.fc.pojo.Userlist">
            <id column="id" jdbcType="INTEGER" property="id"/>
            <id column="idcard" jdbcType="VARCHAR" property="idcard"/>
            <result column="name" jdbcType="VARCHAR" property="name"/>
            <result column="phone" jdbcType="VARCHAR" property="phone"/>
            <result column="user_id" jdbcType="INTEGER" property="userId"/>
        </association>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.fc.pojo.Solve">
        <result column="detail" jdbcType="LONGVARCHAR" property="detail"/>
        <association property="hetong" javaType="com.fc.pojo.Hetong">
            <id column="id" jdbcType="INTEGER" property="id"/>
            <result column="chuzu" jdbcType="VARCHAR" property="chuzu"/>
            <result column="chuzu_idcard" jdbcType="VARCHAR" property="chuzuIdcard"/>
            <result column="zuke" jdbcType="VARCHAR" property="zuke"/>
            <result column="zuke_idcard" jdbcType="VARCHAR" property="zukeIdcard"/>
            <result column="fromdate" jdbcType="VARCHAR" property="fromdate"/>
            <result column="todate" jdbcType="VARCHAR" property="todate"/>
            <result column="house_id" jdbcType="VARCHAR" property="houseId"/>
            <result column="payday" jdbcType="INTEGER" property="payday"/>
        </association>
    </resultMap>
    <select id="selectAll" parameterType="solve" resultMap="ResultMapWithBLOBs">
        select s.*,h.*,u.* from solve s inner join houselist h on s.house_id=h.houseid
        inner join userlist u on s.userlist_id=u.id
    </select>
    <insert id="insertSolve" parameterType="solve">
        insert into solve(house_id,date,detail,userlist_id,status) values
        (#{houseId},#{date},#{detail},#{userlistId},#{status})
    </insert>
    <select id="selectAllSubmit" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
        select s.*,h.*,u.*,h1.* from solve s,userlist u, houselist h ,hetong h1 where s.house_id=h.houseid and
        s.userlist_id=u.id and s.house_id=h1.house_id and h1.zuke=#{zuke} and h1.fromdate=#{fromdate} and
        h1.todate=#{todate}
    </select>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, house_id, date, userlist_id, status
    </sql>
    <sql id="Blob_Column_List">
        detail
    </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.fc.pojo.SolveExample" resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from solve
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.fc.pojo.SolveExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from solve
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from solve
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from solve
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.fc.pojo.SolveExample">
        delete from solve
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.fc.pojo.Solve">
        insert into solve (id, house_id, date,
        userlist_id, status, detail
        )
        values (#{id,jdbcType=INTEGER}, #{houseId,jdbcType=VARCHAR}, #{date,jdbcType=DATE},
        #{userlistId,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, #{detail,jdbcType=LONGVARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.fc.pojo.Solve">
        insert into solve
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="houseId != null">
                house_id,
            </if>
            <if test="date != null">
                date,
            </if>
            <if test="userlistId != null">
                userlist_id,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="detail != null">
                detail,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="houseId != null">
                #{houseId,jdbcType=VARCHAR},
            </if>
            <if test="date != null">
                #{date,jdbcType=DATE},
            </if>
            <if test="userlistId != null">
                #{userlistId,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="detail != null">
                #{detail,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.fc.pojo.SolveExample" resultType="java.lang.Long">
        select count(*) from solve
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update solve
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.houseId != null">
                house_id = #{record.houseId,jdbcType=VARCHAR},
            </if>
            <if test="record.date != null">
                date = #{record.date,jdbcType=DATE},
            </if>
            <if test="record.userlistId != null">
                userlist_id = #{record.userlistId,jdbcType=INTEGER},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=VARCHAR},
            </if>
            <if test="record.detail != null">
                detail = #{record.detail,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update solve
        set id = #{record.id,jdbcType=INTEGER},
        house_id = #{record.houseId,jdbcType=VARCHAR},
        date = #{record.date,jdbcType=DATE},
        userlist_id = #{record.userlistId,jdbcType=INTEGER},
        status = #{record.status,jdbcType=VARCHAR},
        detail = #{record.detail,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update solve
        set id = #{record.id,jdbcType=INTEGER},
        house_id = #{record.houseId,jdbcType=VARCHAR},
        date = #{record.date,jdbcType=DATE},
        userlist_id = #{record.userlistId,jdbcType=INTEGER},
        status = #{record.status,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.fc.pojo.Solve">
        update solve
        <set>
            <if test="houseId != null">
                house_id = #{houseId,jdbcType=VARCHAR},
            </if>
            <if test="date != null">
                date = #{date,jdbcType=DATE},
            </if>
            <if test="userlistId != null">
                userlist_id = #{userlistId,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="detail != null">
                detail = #{detail,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.fc.pojo.Solve">
        update solve
        set house_id = #{houseId,jdbcType=VARCHAR},
        date = #{date,jdbcType=DATE},
        userlist_id = #{userlistId,jdbcType=INTEGER},
        status = #{status,jdbcType=VARCHAR},
        detail = #{detail,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.fc.pojo.Solve">
        update solve
        set house_id = #{houseId,jdbcType=VARCHAR},
        date = #{date,jdbcType=DATE},
        userlist_id = #{userlistId,jdbcType=INTEGER},
        status = #{status,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>