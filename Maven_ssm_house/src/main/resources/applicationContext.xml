<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

    <context:property-placeholder location="classpath:jdbc.properties"/>
    <context:component-scan base-package="com.fc.service">
    </context:component-scan>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}">
        </property>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}">
        </property>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <!-- 配置session工厂   SqlSessionFactoryBean:配置映射文件的bean,在mybatis-spring.jar中 -->
    <!-- SqlSessionFactory是创建访问数据库服务所必须的持久层
      configLocation Mybatis主配置文件路径，支持classpath语法
      mapperLocations 指定mybatis的mapper配置文件，支持classpath语法
      dataSource 数据源
      typeAliasesPackage 指定model层类名的别名扫描包，这与mapper配置中的paramterType和resultType搭配使用
-->
    <!--开启事务-->
    <!--声明式事务-->
    <bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <tx:advice transaction-manager="transactionManager" id="interceptor">
        <tx:attributes>
            <tx:method name="userList" read-only="false" isolation="DEFAULT" propagation="REQUIRED" timeout="5000"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="pointcut" expression="execution(* com.fc.service.*iml.*(..))"/>
        <aop:advisor advice-ref="interceptor" pointcut-ref="pointcut"/>
    </aop:config>
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!--sql注入-->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
    </bean>
    <!--配置mapper接口 MapperScannerConfigurer：配置dao接口的bean,在mybatis-spring.jar包中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.fc.dao"></property>
    </bean>


</beans>